// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: moving_average.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from moving_average.proto</summary>
public static partial class MovingAverageReflection {

  #region Descriptor
  /// <summary>File descriptor for moving_average.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MovingAverageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRtb3ZpbmdfYXZlcmFnZS5wcm90bxoKbG90cy5wcm90bxoSbWF4aW11bV9y",
          "aXNrLnByb3RvGhVkZWNyZWFzZV9mYWN0b3IucHJvdG8aE21vdmluZ19wZXJp",
          "b2QucHJvdG8aEm1vdmluZ19zaGlmdC5wcm90byK8AQoNTW92aW5nQXZlcmFn",
          "ZRITCgRsb3RzGAEgASgLMgUuTG90cxIiCgxtYXhpbXVtX3Jpc2sYAiABKAsy",
          "DC5NYXhpbXVtUmlzaxIoCg9kZWNyZWFzZV9mYWN0cHIYAyABKAsyDy5EZWNy",
          "ZWFzZUZhY3RvchIkCg1tb3ZpbmdfcGVyaW9kGAQgASgLMg0uTW92aW5nUGVy",
          "aW9kEiIKDG1vdmluZ19zaGlmdBgFIAEoCzIMLk1vdmluZ1NoaWZ0YgZwcm90",
          "bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::LotsReflection.Descriptor, global::MaximumRiskReflection.Descriptor, global::DecreaseFactorReflection.Descriptor, global::MovingPeriodReflection.Descriptor, global::MovingShiftReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MovingAverage), global::MovingAverage.Parser, new[]{ "Lots", "MaximumRisk", "DecreaseFactpr", "MovingPeriod", "MovingShift" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MovingAverage : pb::IMessage<MovingAverage> {
  private static readonly pb::MessageParser<MovingAverage> _parser = new pb::MessageParser<MovingAverage>(() => new MovingAverage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MovingAverage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MovingAverageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MovingAverage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MovingAverage(MovingAverage other) : this() {
    lots_ = other.lots_ != null ? other.lots_.Clone() : null;
    maximumRisk_ = other.maximumRisk_ != null ? other.maximumRisk_.Clone() : null;
    decreaseFactpr_ = other.decreaseFactpr_ != null ? other.decreaseFactpr_.Clone() : null;
    movingPeriod_ = other.movingPeriod_ != null ? other.movingPeriod_.Clone() : null;
    movingShift_ = other.movingShift_ != null ? other.movingShift_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MovingAverage Clone() {
    return new MovingAverage(this);
  }

  /// <summary>Field number for the "lots" field.</summary>
  public const int LotsFieldNumber = 1;
  private global::Lots lots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Lots Lots {
    get { return lots_; }
    set {
      lots_ = value;
    }
  }

  /// <summary>Field number for the "maximum_risk" field.</summary>
  public const int MaximumRiskFieldNumber = 2;
  private global::MaximumRisk maximumRisk_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MaximumRisk MaximumRisk {
    get { return maximumRisk_; }
    set {
      maximumRisk_ = value;
    }
  }

  /// <summary>Field number for the "decrease_factpr" field.</summary>
  public const int DecreaseFactprFieldNumber = 3;
  private global::DecreaseFactor decreaseFactpr_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DecreaseFactor DecreaseFactpr {
    get { return decreaseFactpr_; }
    set {
      decreaseFactpr_ = value;
    }
  }

  /// <summary>Field number for the "moving_period" field.</summary>
  public const int MovingPeriodFieldNumber = 4;
  private global::MovingPeriod movingPeriod_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MovingPeriod MovingPeriod {
    get { return movingPeriod_; }
    set {
      movingPeriod_ = value;
    }
  }

  /// <summary>Field number for the "moving_shift" field.</summary>
  public const int MovingShiftFieldNumber = 5;
  private global::MovingShift movingShift_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MovingShift MovingShift {
    get { return movingShift_; }
    set {
      movingShift_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MovingAverage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MovingAverage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Lots, other.Lots)) return false;
    if (!object.Equals(MaximumRisk, other.MaximumRisk)) return false;
    if (!object.Equals(DecreaseFactpr, other.DecreaseFactpr)) return false;
    if (!object.Equals(MovingPeriod, other.MovingPeriod)) return false;
    if (!object.Equals(MovingShift, other.MovingShift)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (lots_ != null) hash ^= Lots.GetHashCode();
    if (maximumRisk_ != null) hash ^= MaximumRisk.GetHashCode();
    if (decreaseFactpr_ != null) hash ^= DecreaseFactpr.GetHashCode();
    if (movingPeriod_ != null) hash ^= MovingPeriod.GetHashCode();
    if (movingShift_ != null) hash ^= MovingShift.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (lots_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Lots);
    }
    if (maximumRisk_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MaximumRisk);
    }
    if (decreaseFactpr_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(DecreaseFactpr);
    }
    if (movingPeriod_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MovingPeriod);
    }
    if (movingShift_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(MovingShift);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (lots_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lots);
    }
    if (maximumRisk_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaximumRisk);
    }
    if (decreaseFactpr_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DecreaseFactpr);
    }
    if (movingPeriod_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MovingPeriod);
    }
    if (movingShift_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MovingShift);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MovingAverage other) {
    if (other == null) {
      return;
    }
    if (other.lots_ != null) {
      if (lots_ == null) {
        Lots = new global::Lots();
      }
      Lots.MergeFrom(other.Lots);
    }
    if (other.maximumRisk_ != null) {
      if (maximumRisk_ == null) {
        MaximumRisk = new global::MaximumRisk();
      }
      MaximumRisk.MergeFrom(other.MaximumRisk);
    }
    if (other.decreaseFactpr_ != null) {
      if (decreaseFactpr_ == null) {
        DecreaseFactpr = new global::DecreaseFactor();
      }
      DecreaseFactpr.MergeFrom(other.DecreaseFactpr);
    }
    if (other.movingPeriod_ != null) {
      if (movingPeriod_ == null) {
        MovingPeriod = new global::MovingPeriod();
      }
      MovingPeriod.MergeFrom(other.MovingPeriod);
    }
    if (other.movingShift_ != null) {
      if (movingShift_ == null) {
        MovingShift = new global::MovingShift();
      }
      MovingShift.MergeFrom(other.MovingShift);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (lots_ == null) {
            Lots = new global::Lots();
          }
          input.ReadMessage(Lots);
          break;
        }
        case 18: {
          if (maximumRisk_ == null) {
            MaximumRisk = new global::MaximumRisk();
          }
          input.ReadMessage(MaximumRisk);
          break;
        }
        case 26: {
          if (decreaseFactpr_ == null) {
            DecreaseFactpr = new global::DecreaseFactor();
          }
          input.ReadMessage(DecreaseFactpr);
          break;
        }
        case 34: {
          if (movingPeriod_ == null) {
            MovingPeriod = new global::MovingPeriod();
          }
          input.ReadMessage(MovingPeriod);
          break;
        }
        case 42: {
          if (movingShift_ == null) {
            MovingShift = new global::MovingShift();
          }
          input.ReadMessage(MovingShift);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
