# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import data_pb2 as data__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import optimization_report_pb2 as optimization__report__pb2
import testing_data_pb2 as testing__data__pb2


class MetaTrader4ServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_testing_data = channel.unary_unary(
        '/MetaTrader4Service/get_testing_data',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=testing__data__pb2.TestingData.FromString,
        )
    self.set_testing_data = channel.unary_unary(
        '/MetaTrader4Service/set_testing_data',
        request_serializer=testing__data__pb2.TestingData.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.execute_test = channel.unary_unary(
        '/MetaTrader4Service/execute_test',
        request_serializer=testing__data__pb2.TestingData.SerializeToString,
        response_deserializer=optimization__report__pb2.OptimizationReport.FromString,
        )
    self.get_result = channel.unary_unary(
        '/MetaTrader4Service/get_result',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=optimization__report__pb2.OptimizationReport.FromString,
        )
    self.set_result = channel.unary_unary(
        '/MetaTrader4Service/set_result',
        request_serializer=optimization__report__pb2.OptimizationReport.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.get_data = channel.unary_unary(
        '/MetaTrader4Service/get_data',
        request_serializer=data__pb2.Data.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.set_data = channel.unary_unary(
        '/MetaTrader4Service/set_data',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=data__pb2.Data.FromString,
        )
    self.check_online = channel.unary_unary(
        '/MetaTrader4Service/check_online',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class MetaTrader4ServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_testing_data(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def set_testing_data(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def execute_test(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_result(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def set_result(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_data(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def set_data(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def check_online(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MetaTrader4ServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_testing_data': grpc.unary_unary_rpc_method_handler(
          servicer.get_testing_data,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=testing__data__pb2.TestingData.SerializeToString,
      ),
      'set_testing_data': grpc.unary_unary_rpc_method_handler(
          servicer.set_testing_data,
          request_deserializer=testing__data__pb2.TestingData.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'execute_test': grpc.unary_unary_rpc_method_handler(
          servicer.execute_test,
          request_deserializer=testing__data__pb2.TestingData.FromString,
          response_serializer=optimization__report__pb2.OptimizationReport.SerializeToString,
      ),
      'get_result': grpc.unary_unary_rpc_method_handler(
          servicer.get_result,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=optimization__report__pb2.OptimizationReport.SerializeToString,
      ),
      'set_result': grpc.unary_unary_rpc_method_handler(
          servicer.set_result,
          request_deserializer=optimization__report__pb2.OptimizationReport.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'get_data': grpc.unary_unary_rpc_method_handler(
          servicer.get_data,
          request_deserializer=data__pb2.Data.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'set_data': grpc.unary_unary_rpc_method_handler(
          servicer.set_data,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=data__pb2.Data.SerializeToString,
      ),
      'check_online': grpc.unary_unary_rpc_method_handler(
          servicer.check_online,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MetaTrader4Service', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
